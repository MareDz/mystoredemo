name: Scheduled Tests
on:
  schedule:
    - cron: '0 0 * * *'
    
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18


      - name: Install dependencies
        run: npm ci


      - name: Install Playwright and Chrome browser
        run: |
          npx playwright install-deps chromium
          npx playwright install


      - name: Run Playwright tests and generate test report
        run: npm run test:smoke
        id: test_results
      

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      
      - name: Count test results
        if: always()
        run: |
          passed_tests=$(jq '[.suites[].specs[].ok | select(. == true)] | length' playwright-report/results.json)
          failed_tests=$(jq '[.suites[].specs[].ok | select(. == false)] | length' playwright-report/results.json)
          flaky_tests=$(jq '[.suites[].specs[].ok | select(. == "flaky")] | length' playwright-report/results.json)
          passed_tests=${passed_tests:-0}
          failed_tests=${failed_tests:-0}
          flaky_tests=${flaky_tests:-0}
          echo "PASSED_TESTS=$passed_tests" >> $GITHUB_ENV
          echo "FAILED_TESTS=$failed_tests" >> $GITHUB_ENV
          echo "FLAKY_TESTS=$flaky_tests" >> $GITHUB_ENV



      - name: Send report to Slack
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_CHANNEL: demo_store
          SLACK_USERNAME: Test Report
          SLACK_MSG_AUTHOR: ''
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://gravatar.com/avatar/b54db7f5b19638ecb798ca45da3ce4c0?s=400&d=robohash&r=x
          SLACK_TITLE: Workflow Trigger
          SLACK_MESSAGE: |
            :white_check_mark:    Passed tests: ${{ env.PASSED_TESTS }} 


            :arrows_counterclockwise:    Flaky tests: ${{ env.FLAKY_TESTS }} 


            :x:    Failed tests: ${{ env.FAILED_TESTS }}
  
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_PRIVATE }}
          SLACK_FOOTER: 'Powered by MarkoDz'
        if: always()





